name: cybear_jinni
description: CyBear Jinni app to interact with your CyBear Jinni Smart Devices
version: 1.1.0+6
homepage: https://github.com/CyBear-Jinni/CBJ_App
author: Guy Luz

# The following line prevents the package from being accidentally published to
# pub.dev using `pub publish`. This is preferred for private packages.
publish_to: 'none' # Remove this line if you wish to publish to pub.dev

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html


environment:
  sdk: ">=2.7.0 <3.0.0"

dependencies:
  # A action bottom sheet that adapts to the platform
  adaptive_action_sheet: ^1.0.9
  # Copy text to clipboard in both
  clipboard_manager: ^0.0.4
  cloud_firestore: ^0.14.4
  # Allow discover network connectivity
  connectivity: ^2.0.2
  # The following adds the Cupertino Icons font to your application.
  # Use with the CupertinoIcons class for iOS style icons.
  cupertino_icons: ^1.0.0
  # Functional programming thingies, let you use multiple return types
  dartz: ^0.9.2
  # Get current device information from within the Flutter application.
  device_info: ^0.4.2+4
  # Internationalization (Easy translations)
  easy_localization: ^2.3.3
  # Easy implementation of a Expansion type card
  expansion_card: ^0.1.0
  firebase_auth: ^0.18.4+1
  firebase_core: ^0.5.3
  flutter:
    sdk: flutter
  # Bloc for state management, replace StatefulWidget
  flutter_bloc: ^6.1.1
  # A cross platform plugin for displaying local notifications.
  flutter_local_notifications: ^3.0.3
  # An easy to implement custom switch
  flutter_switch: ^0.2.0
  fluttertoast: ^7.1.5
  font_awesome_flutter: ^8.11.0
  # Service locator
  get_it: ^5.0.3
  # A high performance, open source, general RPC framework that puts mobile and HTTP/2 first.
  grpc: ^2.8.0
  # A composable, multi-platform, Future-based API for HTTP requests.
  http: ^0.12.0+4
  injectable: ^1.0.5
  # Collection of lint rules for Dart and Flutter projects.
  lint: ^1.3.1
  # Finding commonly used locations on the filesystem
  path_provider: ^1.6.7
  # Popup that ask for the requested permission
  permission_handler: ^5.0.1+1
  # Provides runtime support for a Dart implementation of protobufs.
  protobuf: ^1.1.0
  # A wrapper around InheritedWidget to make them easier to use and more reusable.
  provider: ^4.3.2+3
  # Implementation of the popular reactiveX api for asynchronous programming
  rxdart: ^0.24.0
  # reading and writing simple key-value pairs
  shared_preferences: ^0.5.7
  # Information about a device's connection to wifi
  wifi_info_flutter: ^1.0.1
  # Get available wifi ssid list, user can connect to wifi with ssid and password, and create hotspot
  wifi_iot: ^0.2.0

dev_dependencies:
  build_runner:
  e2e: ^0.4.3+1
  flutter_driver:
    sdk: flutter
  flutter_launcher_icons: ^0.8.1
  flutter_test:
    sdk: flutter
  injectable_generator: ^1.0.6
  mockito: ^4.1.3
# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

flutter_icons:
  ios: true
  android: true
  image_path_ios: "assets/logo.png"
  image_path_android: "assets/logo.png"
  adaptive_icon_background: "assets/logo.png"
  adaptive_icon_foreground: "assets/logo.png"

# The following section is specific to Flutter.
flutter:

  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true
  assets:
    - assets/
    - assets/symbols/
    - assets/translations/
    - assets/gif/

  fonts:
    - family: gidole_regular
      fonts:
        - asset: assets/gidole_regular.ttf
  # To add assets to your application, add an assets section, like this:
  # assets:
  #   - images/a_dot_burr.jpeg
  #   - images/a_dot_ham.jpeg

  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/assets-and-images/#resolution-aware.

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/assets-and-images/#from-packages

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  # fonts:
  #   - family: Schyler
  #     fonts:
  #       - asset: fonts/Schyler-Regular.ttf
  #       - asset: fonts/Schyler-Italic.ttf
  #         style: italic
  #   - family: Trajan Pro
  #     fonts:
  #       - asset: fonts/TrajanPro.ttf
  #       - asset: fonts/TrajanPro_Bold.ttf
  #         weight: 700
  #
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/custom-fonts/#from-packages
